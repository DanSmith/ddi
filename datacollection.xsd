<?xml version="1.0" encoding="UTF-8"?>
<!-- DDI 3.0 Candidate Release June 22, 2007 -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="ddi:datacollection:3_0_CR" xmlns:r="ddi:reusable:3_0_CR" targetNamespace="ddi:datacollection:3_0_CR" elementFormDefault="qualified" attributeFormDefault="unqualified">
   <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
   <xs:import namespace="ddi:reusable:3_0_CR" schemaLocation="reusable.xsd"/><!-- DATA COLLECTION -->
   <xs:element name="DataCollection" type="DataCollectionType">
      <xs:annotation>
         <xs:documentation>The DataCollection element contains all of the metadata about the data collection process of the study or studies being described. This includes methdologies used for determining data sources, sample, and repetions for data collection, question structures, flow logic for questionnaires (traditional or computer-assisted), and data processing occuring during data collection and data product creation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="DataCollectionType">
      <xs:annotation>
         <xs:documentation>DataCollectionType provides the structure of the DataCollection element.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="r:MaintainableID">
            <xs:annotation>
               <xs:documentation>Identifies a specific instance of data collection metadata.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="r:Coverage" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Describes the coverage of the data collection activity.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="r:OtherMaterial" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Other materials related to the data collection.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="r:Note" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Notes regarding the data collection metadata.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="Methodology" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Methodological metadata for the data collection.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="CollectionEvent" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A set of metadata describing a data collection event. Several events may be described in a single data collection activity.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="QuestionScheme" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes a set of questions used in the data collection. Several sets of questions may be used. A single scheme always is maintained by a single agency.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="Instrument" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A description of an instrument related to the data collection activity.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="ProcessingEvent" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Metadata regarding a processing event occurring as part of the data collection or data file preparation.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType><!-- METHODOLOGY -->
   <xs:complexType name="MethodologyType">
      <xs:annotation>
         <xs:documentation>MethodologyType describes the methodology used for data collection.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="DataCollectionMethodology" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes a methodology for data collection.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="TimeMethod" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes how time fits into the data collection methodology.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="SamplingProcedure" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes a sampling procedure.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="DeviationFromSampleDesign" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes deviation from a sample design.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="r:Software" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Metadata regarding a software package used as part of the data collection methodology.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType><!-- COLLECTION EVENT -->
   <xs:complexType name="CollectionEventType">
      <xs:annotation>
         <xs:documentation>CollectionEventType structures the CollectionEvent element.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="DataCollectorOrganizationReference" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Reference to an organization, defined in the organziation scheme, responsible for the data collection</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="DataSource" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes a data source.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="DataCollectionFrequency" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes the frequency of data collection. This may be a single point in time if appropriate, or a cycle.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="ModeOfCollection" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes the mode of collection.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="CollectionSituation" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes the situation in which the data collection event takes place. </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="ActionToMinimizeLosses" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes action taken to minimize loss of data from the collection event.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="DataSourceType">
      <xs:annotation>
         <xs:documentation>DataSourceType structures a DataSource element.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A description of the data source such as a Population or Universe statement.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="Origin" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Origin of the data. For example, Personal interviews of head of household, or Administrative Records of XXX Organization, forms ZZ and YY.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="Characteristic" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A significant characteristic of the data source that may effect understanding or collection of the data. For example: legibility of data source affected due to water damage.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType><!-- PROCESSING -->
   <xs:complexType name="ProcessingType">
      <xs:annotation>
         <xs:documentation>ProcessingType provides a structure for describing the processing within data collection.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="ControlOperation" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes a control operation.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="CleaningOperation" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes a raw data cleaning operation.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="Weighting" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes the weighting used in the process.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="DataAppraisalInformation" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Information about the data appraisal.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="Coding" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A description of the coding of the data within the process.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="OperationType">
      <xs:annotation>
         <xs:documentation>Provides a structure for cleaning and control operations within a data collection process.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A description of the operation.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="AgencyOrganizationReference" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A reference to the listing in Organization of the agency responsible for the operation.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="DataAppraisalInformationType">
      <xs:annotation>
         <xs:documentation>Metadata regarding the appraisal of the collected data.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="ResponseRate" type="xs:string" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A response rate.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="SamplingError" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The sampling error of the data.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="OtherAppraisalProcess" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Description of any other form of data approasal.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="CodingType">
      <xs:annotation>
         <xs:documentation>A structure for the description of the computation used in the data collection or data processing such as recoding, derivations, or incorporation of external data sources.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="r:MaintainableID">
            <xs:annotation>
               <xs:documentation>Provides identifer for reference from l:CodingInstruction</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:choice>
            <xs:element ref="GeneralInstruction"/>
            <xs:element ref="DerivationInstruction"/>
         </xs:choice>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="GeneralInstructionType">
      <xs:annotation>
         <xs:documentation>Coding instructions that pertain to data collection or data processing overall such as handling of non-response to questions, imputation practices, suppression rules, etc. Coding instructions should be listed separately to allow for referencing of specific processes.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="r:Description" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A human readable description of the coding instruction.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="Command" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A machine actionable command for processing the coding process.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
      <xs:attribute name="isOverride" type="xs:boolean" default="false">
         <xs:annotation>
            <xs:documentation>When true identifies a coding instruction that overrides a more generally used process.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>
   <xs:complexType name="DerivationInstructionType">
      <xs:annotation>
         <xs:documentation>Instructructions for recodes, derivations from multiple question or variable sources, and derivations based on external sources. Instructions should be listed separately so they can be referenced by variables in the logical product.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="SourceQuestion" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Reference to a question used in the coding process</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="SourceVariable" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Reference to a variable used in the coding process</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="ExternalInformation" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Reference to an external source of inforamtion used in the coding process, for example a value from a chart, etc.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A human readable description of the coding instruction.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="Command" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A machine actionable command for processing the coding process.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="ControlConstruct" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A control construct within the derivation instruction.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="SourceReferenceType">
      <xs:annotation>
         <xs:documentation>Reference to a variable or question used in the deriviation or coding instruction.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="r:ReferenceType">
            <xs:sequence>
               <xs:element name="Mneumonic" type="xs:string">
                  <xs:annotation>
                     <xs:documentation>Allows for assigning a mneumonic name used to reference this item in a command.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType><!-- INSTRUMENT -->
   <xs:complexType name="InstrumentType">
      <xs:annotation>
         <xs:documentation>Structures the metadata describing a collection instrument used in the data collection.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="r:MaintainableID">
            <xs:annotation>
               <xs:documentation>A unique identifier assigned to the Instrument.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="Type" minOccurs="0">
            <xs:annotation>
               <xs:documentation>Describes the type of the instrument, according to the documentor's type classification.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="r:Software" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Describes a software package associated with the  collection instrument.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="ObjectReference" type="xs:NCName" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A reference to the data object with which the data collection instrument is associated. </xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="ControlConstruct" minOccurs="0">
            <xs:annotation>
               <xs:documentation>A control construct within the collection instrument. </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ControlConstruct" type="ControlConstructType" abstract="true">
      <xs:annotation>
         <xs:documentation>The global element ControlConstruct serves as the head of a substitution group for describing various control constructs within the flow logic of an instrument.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="ControlConstructType" abstract="true">
      <xs:annotation>
         <xs:documentation>Provides the basic, extensible structure for control elements used in describing flow logic within the instrument. The only data point which is inherited by the extended constructs based on this type is the identification of the control construct.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="r:IdentifiableID"/>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="IfThenElse" type="IfThenElseType" substitutionGroup="ControlConstruct"/>
   <xs:complexType name="IfThenElseType">
      <xs:annotation>
         <xs:documentation>Provides an if-then-else construct, so that if the stated condition is met, the Then clause is triggered, and otherwise the Else clause is triggered.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="ControlConstructType">
            <xs:sequence>
               <xs:element ref="IfCondition">
                  <xs:annotation>
                     <xs:documentation>The condition which must be met to trigger the Then clause, expressed as a Coding. The condition is an expression in the programming language used in the instrument.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="Then">
                  <xs:annotation>
                     <xs:documentation>The control construct which should be triggered if the associated condition is met.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="Else" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>The control construct which is triggered if the associated condition is not met.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="NestedControlConstructType">
      <xs:annotation>
         <xs:documentation>The NestedControlConstructType contains the control construct which is to be triggered when an associated condition is met (or not met). It is used to construct the flow structures of the instrument. </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="ControlConstruct">
            <xs:annotation>
               <xs:documentation>This element contains any of the elements beloning to the substitution group of which the ControlConstruct element is the head. Because ControlConstruct i is abstract, you may never use it directly in an XML instance.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="RepeatUntil" type="RepeatUntilType" substitutionGroup="ControlConstruct"/>
   <xs:complexType name="RepeatUntilType">
      <xs:annotation>
         <xs:documentation>Structures the control construct which allows a Coding to be repeated until a specified condition is met.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="ControlConstructType">
            <xs:sequence>
               <xs:element ref="UntilCondition">
                  <xs:annotation>
                     <xs:documentation>The condition which must be met to stop the repeated operation of the Coding in the associated UntilConstruct. The condition is an expression in the programming language used in the instrument.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="UntilConstruct">
                  <xs:annotation>
                     <xs:documentation>The Coding which runs until the UntilCondition is met. When the operation ceases, the flow returns to the containing control construct.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="RepeatWhile" type="RepeatWhileType" substitutionGroup="ControlConstruct"/>
   <xs:complexType name="RepeatWhileType">
      <xs:annotation>
         <xs:documentation>Structures a control construct which repeats while a specified condition is met. Before each iteration the condition is tested. When the condition is not met, control passes back to the containing control construct.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="ControlConstructType">
            <xs:sequence>
               <xs:element ref="WhileCondition">
                  <xs:annotation>
                     <xs:documentation>The condition which must be met to trigger the operation of the associated Coding.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="WhileConstruct">
                  <xs:annotation>
                     <xs:documentation>The Coding which is to be run when the associated condition has been met.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="Loop" type="LoopType" substitutionGroup="ControlConstruct"/>
   <xs:complexType name="LoopType">
      <xs:annotation>
         <xs:documentation>Structures a control construct which loops until a limiting condition is met. The ControlConstruct contained in the Loop operates on the LoopVariable until the LoopWhile condition is met, and then control is handed back to the containing control construct.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="ControlConstructType">
            <xs:sequence>
               <xs:element ref="LoopVariableReference" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>A reference to the variable (as used in the associated Codings) which is incremented or otherwise manipulated to meet the conditions stated in the LoopWhile condition.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="InitialValue" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>The initial value to which the LoopVariable is set.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="LoopWhile">
                  <xs:annotation>
                     <xs:documentation>The condition which must be met for the Loop's functioning to cease; when this condition is met, control is handed back to the containing control construct.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="StepValue" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>A Coding which is used to manipulate the LoopVariable after each iteration of the Loop's associated ControlConstruct element.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="ControlConstruct" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="Sequence" type="SequenceType" substitutionGroup="ControlConstruct"/>
   <xs:complexType name="SequenceType">
      <xs:annotation>
         <xs:documentation>A sequence of operations expressed as control constructs performed by the instrument.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="ControlConstructType">
            <xs:sequence>
					<xs:element ref="Type" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Used to assign a type to the control construct within the Sequence, according to a classification used by the Documentor.</xs:documentation>
						</xs:annotation>
					</xs:element>
               <xs:element ref="ControlConstruct" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="ComputationItem" type="ComputationItemType" substitutionGroup="ControlConstruct"/>
   <xs:annotation>
      <xs:documentation>Structures a computational item by assigning a value to a variable.</xs:documentation>
   </xs:annotation>
   <xs:complexType name="ComputationItemType">
      <xs:complexContent>
         <xs:extension base="ControlConstructType">
            <xs:sequence>
               <xs:element ref="Code">
                  <xs:annotation>
                     <xs:documentation>The Code which contains the value of the variable.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="AssignedVariableReference">
                  <xs:annotation>
                     <xs:documentation>A reference to a variable to which the associated value in the Code element is assigned.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="StatementItem" type="StatementItemType" substitutionGroup="ControlConstruct"/>
   <xs:complexType name="StatementItemType">
      <xs:annotation>
         <xs:documentation>A textual statement used in the Instrument.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="ControlConstructType">
            <xs:sequence>
               <xs:element ref="DisplayText">
                  <xs:annotation>
                     <xs:documentation>The string to be displayed in the instrument.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                     <xs:documentation>A description of the string's purpose within the instrument.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="DynamicTextType">
      <xs:annotation>
         <xs:documentation>Structures the behavior of dynamic or static text within the instrument.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="Text" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The element containing the text. It is never used directly, but is always replaced by one of the derived elements in the substitution group for which the Text elements acts as the head.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
      <xs:attribute ref="xml:lang"/>
      <xs:attribute name="translated" type="xs:boolean" default="false"/>
      <xs:attribute name="translatable" type="xs:boolean" default="true"/>
   </xs:complexType>
   <xs:element name="Text" type="TextType" abstract="true">
      <xs:annotation>
         <xs:documentation>Text exists only to act as the head of a substitution group for the various types of derived text elements within the instrument.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="TextType" abstract="true">
      <xs:annotation>
         <xs:documentation>Provides a structure to be inherited by derivation for elements belonging to the substitution group of which the Text element is the head.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A description of the text element.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="LiteralText" type="LiteralTextType" substitutionGroup="Text"/>
   <xs:complexType name="LiteralTextType">
      <xs:annotation>
         <xs:documentation>Literal (static) text to be used in the instrument.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="TextType">
            <xs:sequence>
               <xs:element name="Text" type="xs:string">
                  <xs:annotation>
                     <xs:documentation>The value of the static text string.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="ConditionalText" type="ConditionalTextType" substitutionGroup="Text"/>
   <xs:complexType name="ConditionalTextType">
      <xs:annotation>
         <xs:documentation>Text which has a changeable value, based on a condition expressed in Code.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="TextType">
            <xs:sequence>
               <xs:element ref="Expression">
                  <xs:annotation>
                     <xs:documentation>The condition on which the associated text varies. </xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="QuestionSchemeType">
      <xs:annotation>
         <xs:documentation>A set of questions maintained by an agency, and used in the instrument. </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="r:MaintainableID">
            <xs:annotation>
               <xs:documentation>The identification of the Question Scheme.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="r:Label" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A short description of the question scheme.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A description of the use of the question scheme.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="QuestionSchemeReference" minOccurs="0" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Provides for inclusion by reference of external question schemes.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="QuestionItem" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>An item (that is, a question) belonging to the Question Scheme.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="QuestionItem" type="QuestionItemType">
      <xs:annotation>
         <xs:documentation>Acts as the head of a substitution group for a set of derived question items.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="QuestionItemType">
      <xs:annotation>
         <xs:documentation>Structures the QuestionItem, and provides a structure inherited by other derived question item types.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="ControlConstructType">
            <xs:sequence>
               <xs:element ref="QuestionText" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                     <xs:documentation>The text of the question presented in the instrument. this can occur multiple times for multi lingual questions.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="QuestionIntent" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                     <xs:documentation>The purpose of the question vis-a-vis the data being collected.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:choice>
                  <xs:element ref="ResponseDomainReference">
                     <xs:annotation>
                        <xs:documentation>Contains a reference to a response domain for the question. Typically used for references to code or category schemes.</xs:documentation>
                     </xs:annotation>
                  </xs:element>
                  <xs:element ref="ResponseDomain">
                     <xs:annotation>
                        <xs:documentation>Contains a response domain for the question. Typically used to describe simple response domains (textual, numeric, etc.)</xs:documentation>
                     </xs:annotation>
                  </xs:element>
               </xs:choice>
               <xs:element ref="ConceptReference" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                     <xs:documentation>A reference to the concept asssociated with the response to the question.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="AssociatedItems" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>Question items associated with the Question Item.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="VisualAid" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                     <xs:documentation>A pointer to a file containing a visual aid presented by the instrument. Typically a URL.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:element name="MutipleQuestionItem" type="MultipleQuestionItemType" substitutionGroup="QuestionItem">
      <xs:annotation>
         <xs:documentation>Describes a multiple-question question item. Inherits from QuestionItem.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="MultipleQuestionItemType">
      <xs:annotation>
         <xs:documentation>Structures a multiple-question question item.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="QuestionItemType">
            <xs:sequence>
               <xs:element name="Sequence" type="xs:integer">
                  <xs:annotation>
                     <xs:documentation>An integer denoting the position in the sequence of questions within the mutliple question question item.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="SubQuestions" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>A group of question items forming a group of sub-questions.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="QuestionGroupType">
      <xs:annotation>
         <xs:documentation>Structures a group of question items.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element ref="QuestionItem" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A reference to a question item within the group.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="ResponseDomain" type="r:RepresentationType" abstract="true">
      <xs:annotation>
         <xs:documentation>A response domain for a question item, used only as the head of a substitution group for the various derived types of response domains.</xs:documentation>
      </xs:annotation>
   </xs:element>

   <xs:element name="QuestionConstruct" type="QuestionConstructType" substitutionGroup="ControlConstruct"/>
   <xs:complexType name="QuestionConstructType">
      <xs:annotation>
         <xs:documentation>Structures the construct which ties together questions and the programmatic logic of the control constructs.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="ControlConstructType">
            <xs:sequence>
               <xs:element ref="QuestionReference">
                  <xs:annotation>
                     <xs:documentation>A reference to a question.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="ResponseUnit" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                     <xs:documentation>The response unit.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="AnalysisUnit" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                     <xs:documentation>The analysis unit.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="r:UniverseReference" minOccurs="0" maxOccurs="unbounded">
                  <xs:annotation>
                     <xs:documentation>Reference to the description of the persons or other elements that are the object of the research and to which any analytic results refer.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   
   <xs:element name="TextDomain" type="TextDomainType" substitutionGroup="ResponseDomain"/>
   
   <xs:complexType name="TextDomainType">
      <xs:annotation>
         <xs:documentation>Structures the response domain for a textual response.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="r:TextRepresentationType">
				<xs:sequence>
					<xs:element ref="Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Label for the response domain as a human-readable string.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A human-readable description of the response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   
   <xs:element name="DateTimeDomain" type="DateTimeDomainType" substitutionGroup="ResponseDomain"/>
   
   <xs:complexType name="DateTimeDomainType">
      <xs:annotation>
         <xs:documentation>Structures the response domain for a Date, Time, or DateTime response.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="r:DateTimeRepresentationType">
				<xs:sequence>
					<xs:element ref="Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Label for the response domain as a human-readable string.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A human-readable description of the response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   
   <xs:element name="NumericDomain" type="NumericDomainType" substitutionGroup="ResponseDomain"/>
   
   <xs:complexType name="NumericDomainType">
      <xs:annotation>
         <xs:documentation>Structures the response domain for a numeric response. May be a range or specific value, or a list of ranges. </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="r:NumericRepresentationType">
				<xs:sequence>
					<xs:element ref="Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Label for the response domain as a human-readable string.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A human-readable description of the response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="CodeDomain" type="CodeDomainType" substitutionGroup="ResponseDomain"/>

   <xs:complexType name="CodeDomainType">
      <xs:annotation>
         <xs:documentation>Describes a coded response domain.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="r:CodeRepresentationType">
				<xs:sequence>
					<xs:element ref="Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Label for the response domain as a human-readable string.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A human-readable description of the response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="CategoryDomain" type="CategoryDomainType" substitutionGroup="ResponseDomain"/>

   <xs:complexType name="CategoryDomainType">
      <xs:annotation>
         <xs:documentation>Structures a response domain based on categorization.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="r:CategoryRepresentationType">
				<xs:sequence>
					<xs:element ref="Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Label for the response domain as a human-readable string.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A human-readable description of the response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="GeographicDomain" type="GeographicDomainType" substitutionGroup="ResponseDomain"/>
   
   <xs:complexType name="GeographicDomainType">
      <xs:annotation>
         <xs:documentation>Structures the response domain for a geographic point to ensure collection of relevant information.The point may be associated with a polygon (such as the centroid of the polygon) or a line (end or shape points of a line).</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="r:GeographicRepresentationType">
				<xs:sequence>
					<xs:element ref="Label" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Label for the response domain as a human-readable string.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="r:Description" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>A human-readable description of the response domain.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element name="Type" type="r:CodeValueType">
      <xs:annotation>
         <xs:documentation>A generic element for specifying a further classification of an object. Note that this element can be substituted with an element that extends the reusable code type to restrict the possible values to an enumeration.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Methodology" type="MethodologyType">
      <xs:annotation>
         <xs:documentation>Methodological metadata for the data collection.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="CollectionEvent" type="CollectionEventType">
      <xs:annotation>
         <xs:documentation>A set of metadata describing a data collection event. Several events may be described in a single data collection activity.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="QuestionScheme" type="QuestionSchemeType">
      <xs:annotation>
         <xs:documentation>Describes a set of questions used in the data collection. Several sets of questions may be used. A single scheme always is maintained by a single agency.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="QuestionSchemeReference" type="r:ReferenceType">
      <xs:annotation>
         <xs:documentation>Provides for inclusion by reference of one question scheme in another.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Instrument" type="InstrumentType">
      <xs:annotation>
         <xs:documentation>A description of an instrument related to the data collection activity.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="ProcessingEvent" type="ProcessingType">
      <xs:annotation>
         <xs:documentation>Metadata regarding a processing event occurring as part of the data collection.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="DataCollectionMethodology" type="r:IdentifiedStructuredStringType">
      <xs:annotation>
         <xs:documentation>Describes a methodology for data collection.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="TimeMethod" type="r:IdentifiedStructuredStringType">
      <xs:annotation>
         <xs:documentation>Describes how time fits into the data collection methodology.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="SamplingProcedure" type="r:IdentifiedStructuredStringType">
      <xs:annotation>
         <xs:documentation>Describes a sampling procedure.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="DeviationFromSampleDesign" type="r:IdentifiedStructuredStringType">
      <xs:annotation>
         <xs:documentation>Describes deviation from a sample design.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="DataSource" type="DataSourceType">
      <xs:annotation>
         <xs:documentation>Describes a data cource.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Origin" type="r:StructuredStringType">
      <xs:annotation>
         <xs:documentation>Origin of the data. For example, Personal interviews of head of household, or Administrative Records of XXX Organization, forms ZZ and YY.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Characteristic" type="r:StructuredStringType">
      <xs:annotation>
         <xs:documentation>A significant characteristic of the data source that may effect understanding or collection of the data. For example: legibility of data source affected due to water damage.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="DataCollectionFrequency" type="r:DateType">
      <xs:annotation>
         <xs:documentation>Describes the frequency of data collection. This may be a single point in time if appropriate, or a cycle.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="ModeOfCollection" type="r:IdentifiedStructuredStringType">
      <xs:annotation>
         <xs:documentation>Describes the mode of collection.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="CollectionSituation" type="r:IdentifiedStructuredStringType">
      <xs:annotation>
         <xs:documentation>Describes the situation in which the data collection event takes place. </xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="ActionToMinimizeLosses" type="r:IdentifiedStructuredStringType">
      <xs:annotation>
         <xs:documentation>Describes action taken to minimize loss of data from the collection event.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="ControlOperation" type="OperationType">
      <xs:annotation>
         <xs:documentation>Describes a control operation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="CleaningOperation" type="OperationType">
      <xs:annotation>
         <xs:documentation>Describes a raw data cleaning operation.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Weighting" type="r:IdentifiedStructuredStringType">
      <xs:annotation>
         <xs:documentation>Describes the weighting used in the process.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="DataAppraisalInformation" type="DataAppraisalInformationType">
      <xs:annotation>
         <xs:documentation>Information about the data appraisal.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Coding" type="CodingType">
      <xs:annotation>
         <xs:documentation>A description of the coding of the data within the process.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Expression" type="r:CodeType">
      <xs:annotation>
         <xs:documentation>A computational expression used in the coding.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="SourceVariableReference" type="r:ReferenceType">
      <xs:annotation>
         <xs:documentation>A reference to a source variable used as an input in the preceding Expression.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="IfCondition" type="r:CodeType">
      <xs:annotation>
         <xs:documentation>The condition which must be met to trigger the Then clause, expressed as a Coding. The condition is an expression in the programming language used in the instrument.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Then" type="NestedControlConstructType">
      <xs:annotation>
         <xs:documentation>The control construct which should be triggered if the associated condition is met.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Else" type="NestedControlConstructType">
      <xs:annotation>
         <xs:documentation>The control construct which is triggered if the associated condition is not met.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="UntilCondition" type="r:CodeType">
      <xs:annotation>
         <xs:documentation>The condition which must be met to stop the repeated operation of the Coding in the associated UntilConstruct. The condition is an expression in the programming language used in the instrument.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="UntilConstruct" type="NestedControlConstructType">
      <xs:annotation>
         <xs:documentation>The Coding which runs until the UntilCondition is met. When the operation ceases, the flow returns to the containing control construct.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="WhileCondition" type="r:CodeType">
      <xs:annotation>
         <xs:documentation>The condition which must be met to trigger the operation of the associated Coding.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="WhileConstruct" type="NestedControlConstructType">
      <xs:annotation>
         <xs:documentation>The Coding which is to be run when the associated condition has been met.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="LoopVariableReference" type="r:ReferenceType">
      <xs:annotation>
         <xs:documentation>A reference to the variable (as used in the associated Codings) which is incremented or otherwise manipulated to meet the conditions stated in the LoopWhile condition.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="InitialValue" type="r:CodeType">
      <xs:annotation>
         <xs:documentation>The initial value to which the LoopVariable is set.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="LoopWhile" type="r:CodeType">
      <xs:annotation>
         <xs:documentation>The condition which must be met for the Loop's functioning to cease; when this condition is met, control is handed back to the containing control construct.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="StepValue" type="r:CodeType">
      <xs:annotation>
         <xs:documentation>A Coding which is used to manipulate the LoopVariable after each iteration of the Loop's associated ControlConstruct element.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Code" type="r:CodeType">
      <xs:annotation>
         <xs:documentation>The Code which contains the value of the variable.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="AssignedVariableReference" type="r:ReferenceType">
      <xs:annotation>
         <xs:documentation>A reference to a variable to which the associated value in the Code element is assigned.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="DisplayText" type="DynamicTextType">
      <xs:annotation>
         <xs:documentation>The string to be displayed in the instrument.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="QuestionText" type="DynamicTextType">
      <xs:annotation>
         <xs:documentation>The text of the question presented in the instrument.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="QuestionIntent" type="r:StructuredStringType">
      <xs:annotation>
         <xs:documentation>The purpose of the question vis-a-vis the data being collected.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="ResponseDomainReference" type="r:ReferenceType">
      <xs:annotation>
         <xs:documentation>Contains a reference to a response domain for the question. Typically used for references to code or category schemes.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="ConceptReference" type="r:ReferenceType">
      <xs:annotation>
         <xs:documentation>A reference to the concept asssociated with the response to the question.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="AssociatedItems" type="QuestionGroupType">
      <xs:annotation>
         <xs:documentation>Question items associated with the Question Item.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="SubQuestions" type="QuestionGroupType">
      <xs:annotation>
         <xs:documentation>A group of question items forming a group of sub-questions.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Label" type="r:InternationalStringType">
      <xs:annotation>
         <xs:documentation>Label for the response domain as a human-readable string.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="QuestionReference" type="r:ReferenceType">
      <xs:annotation>
         <xs:documentation>A reference to a question.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="ResponseText" type="DynamicTextType">
      <xs:annotation>
         <xs:documentation>The text of a response.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="ShortLabel" type="r:InternationalStringType">
      <xs:annotation>
         <xs:documentation>An abbreviated label of limited length</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="SamplingError" type="r:StructuredStringType">
      <xs:annotation>
         <xs:documentation>The sampling error of the data.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="OtherAppraisalProcess" type="r:StructuredStringType">
      <xs:annotation>
         <xs:documentation>Description of any other form of data approasal.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="ResponseUnit" type="r:InternationalStringType">
      <xs:annotation>
         <xs:documentation>The response unit.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="AnalysisUnit" type="r:InternationalStringType">
      <xs:annotation>
         <xs:documentation>The analysis unit.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="Command" type="r:StructuredStringType">
      <xs:annotation>
         <xs:documentation>A machine actionable command for processing the coding process.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="GeneralInstruction" type="GeneralInstructionType">
      <xs:annotation>
         <xs:documentation>Coding instructions that pertain to data collection or data processing overall such as handling of non-response to questions, imputation practices, suppression rules, etc. Coding instructions should be listed separately to allow for referencing of specific processes.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="DerivationInstruction" type="DerivationInstructionType">
      <xs:annotation>
         <xs:documentation>Instructructions for recodes, derivations from multiple question or variable sources, and derivations based on external sources. Instructions should be listed separately so they can be referenced by variables in the logical product.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="SourceQuestion" type="SourceReferenceType">
      <xs:annotation>
         <xs:documentation>Reference to a question used in the coding process.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="SourceVariable" type="SourceReferenceType">
      <xs:annotation>
         <xs:documentation>Reference to a variable used in the coding process.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="ExternalInformation" type="r:ReferenceType">
      <xs:annotation>
         <xs:documentation>Reference to an external source of inforamtion used in the coding process, for example a value from a chart, etc.</xs:documentation>
      </xs:annotation>
   </xs:element>
	<xs:element name="DataCollectorOrganizationReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an organization, defined in the organziation scheme, responsible for the data collection</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AgencyOrganizationReference" type="r:ReferenceType">
		<xs:annotation>
			<xs:documentation>Reference to an organization, defined in the organziation scheme, responsible for the operation.</xs:documentation>
		</xs:annotation>
	</xs:element>
</xs:schema>