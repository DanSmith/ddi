<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2008 DDI Alliance. DDI 3.0 Candidate Release 3/7/2008. -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="ddi:dataset:3_0_CR3" xmlns:r="ddi:reusable:3_0_CR3" xmlns:p="ddi:physicaldataproduct:3_0_CR3" targetNamespace="ddi:dataset:3_0_CR3" elementFormDefault="qualified" attributeFormDefault="unqualified">
   <xs:import namespace="ddi:reusable:3_0_CR3" schemaLocation="reusable.xsd"/>
   <xs:import namespace="ddi:physicaldataproduct:3_0_CR3" schemaLocation="physicaldataproduct.xsd"/>
   <xs:element name="DataSet" type="DataSetType" substitutionGroup="p:BaseRecordLayout"/>
   <xs:complexType name="DataSetType">
      <xs:complexContent>
         <xs:extension base="p:BaseRecordLayoutType">
            <xs:sequence>
               <xs:element ref="Name" maxOccurs="unbounded"/>
               <xs:element ref="IdentifyingVariableReference" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>Identifies the variable which holds the primary key or index values.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element ref="DefaultVariableSchemeReference" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>Identifies the variable scheme from which identifying values may be inherited by the items contained in the data set. This allows for only the ID values to be specified at the item level, to avoid needless repetition.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:choice>
               		<xs:element ref="RecordSet"/>
               		<xs:element ref="ItemSet"/>
               		<xs:element ref="VariableSet"/>
               </xs:choice>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="RecordSetType">
            <xs:annotation>
               <xs:documentation>Storage for traditional rectangular form of data.</xs:documentation>
            </xs:annotation>   
      <xs:sequence>
         <xs:element ref="VariableOrder">
            <xs:annotation>
               <xs:documentation>Holds the sequence of variable reference in the storage order.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element ref="Record" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Record of item values.</xs:documentation>
            </xs:annotation>
         </xs:element>         
      </xs:sequence>
   </xs:complexType>   
   <xs:element name="RecordSet" type="RecordSetType"/>
   <xs:complexType name="VariableOrderType">
            <xs:annotation>
               <xs:documentation>Holds the sequence of variable references in the storage order.</xs:documentation>
            </xs:annotation>   
      <xs:sequence>
         <xs:element ref="VariableReference" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Holds the variable reference in the storage order.</xs:documentation>
            </xs:annotation>
         </xs:element>         
      </xs:sequence>
   </xs:complexType>
   <xs:element name="VariableOrder" type="VariableOrderType"/>
   <xs:complexType name="RecordType">
            <xs:annotation>
               <xs:documentation>Holds the sequence of values of the record in the storage order, as described by VariableOrder.</xs:documentation>
            </xs:annotation>   
      <xs:sequence>
         <xs:element name="Value" type="xs:string" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Holds the value in the record.</xs:documentation>
            </xs:annotation>
         </xs:element>         
      </xs:sequence>
   </xs:complexType>   
   <xs:element name="Record" type="RecordType"/>
   <xs:complexType name="ItemSetType">
   <xs:annotation>
   	<xs:documentation>Storage form for random item value order.</xs:documentation>
   </xs:annotation>
      <xs:sequence>
         <xs:element ref="ItemValue" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Identifies and holds the item value.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:complexType name="ItemValueType">
      <xs:sequence>
         <xs:element ref="VariableReference">
            <xs:annotation>
               <xs:documentation>References the variable associated with the value given.</xs:documentation>
            </xs:annotation>
         </xs:element>
         <xs:element name="RecordReference" type="xs:string">
            <xs:annotation>
               <xs:documentation>Holds the value of the records identifying field/key.</xs:documentation>
            </xs:annotation>
         </xs:element>         
         <xs:element name="Value" type="xs:string" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>Holds the item value.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>
   <xs:element name="Name" type="r:InternationalStringType"/>
   <xs:element name="IdentifyingVariableReference" type="r:ReferenceType">
      <xs:annotation>
         <xs:documentation>Identifies the variable which holds the primary key or index values.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="DefaultVariableSchemeReference" type="r:ReferenceType">
      <xs:annotation>
         <xs:documentation>Identifies the variable scheme from which identifying values may be inherited by the items contained in the data set. This allows for only the ID values to be specified at the item level, to avoid needless repetition.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="ItemSet" type="ItemSetType"/>
   <xs:element name="ItemValue" type="ItemValueType">
      <xs:annotation>
         <xs:documentation>Identifies the data set.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:element name="VariableReference" type="r:ReferenceType">
      <xs:annotation>
         <xs:documentation>References the variable associated with the value given.</xs:documentation>
      </xs:annotation>
   </xs:element>
   <xs:complexType name="VariableSetType">
            <xs:annotation>
               <xs:documentation>Storage form for capturing all values of each variable.</xs:documentation>
            </xs:annotation>   
      <xs:sequence>
         <xs:element ref="VariableItem" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The set of values associated with a single variable (a column in a rectangular data set).</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType>   
   <xs:element name="VariableSet" type="VariableSetType"/>
   <xs:complexType name="VariableItemType">
            <xs:annotation>
               <xs:documentation>The set of values associated with a single variable (a column in a rectangular data set).</xs:documentation>
            </xs:annotation>   
      <xs:sequence>
	   <xs:element name="VariableReference" type="r:ReferenceType">
	      <xs:annotation>
		 <xs:documentation>References the variable associated with the values given.</xs:documentation>
	      </xs:annotation>
	   </xs:element>      
         <xs:element name="Value" type="xs:string" maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>The value associated with the referenced variable.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
   </xs:complexType> 
   <xs:element name="VariableItem" type="VariableItemType"/>
      <xs:complexType name="ValueType">
               <xs:annotation>
                  <xs:documentation>A value associated with a referenced variable in a variable set.</xs:documentation>
               </xs:annotation>   
         <xs:simpleContent>
         	<xs:extension base="xs:string">
         		<xs:attribute name="recordReference" type="xs:string" use="required"/>
         	</xs:extension>
         </xs:simpleContent>
   </xs:complexType> 
</xs:schema>